{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/Loader/PeopleTable.tsx","pages/PeoplePage.tsx","components/Loader/NavBar.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PeopleTable","selectedSlug","useState","persons","setPersons","eror","setEror","load","setLoad","getPersons","people","peopleGood","map","one","mother","find","a","name","motherName","father","fatherName","useEffect","length","person","classNames","slug","href","sex","born","died","PeoplePage","useParams","NavBar","role","isActive","to","HomePage","NotFoundPage","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1b8b73a3.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getPeople } from '../../api';\nimport { Loader } from '.';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  selectedSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ selectedSlug }) => {\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [eror, setEror] = useState(false);\n  const [load, setLoad] = useState(false);\n  const isSelected = (people: Person) => people.slug === selectedSlug;\n\n  const getPersons = async () => {\n    setLoad(true);\n    const people = await getPeople();\n    const peopleGood = people.map(one => ({\n      ...one,\n      mother: people.find(a => a.name === one.motherName),\n      father: people.find(a => a.name === one.fatherName),\n    }));\n\n    try {\n      setPersons(peopleGood);\n    } catch {\n      setEror(true);\n    } finally {\n      setLoad(false);\n    }\n  };\n\n  useEffect(() => {\n    getPersons();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {load && <Loader />}\n\n        {eror && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {persons.length === 0 && !load && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {persons.length > 0 && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {persons.map(person => (\n                <tr\n                  data-cy=\"person\"\n                  key={person.slug}\n                  className={classNames(\n                    { 'has-background-warning': isSelected(person) },\n                  )}\n                >\n                  <td>\n                    <a href={`#/people/${person.slug}`} className={classNames({ 'has-text-danger': person.sex === 'f' })}>\n                      {person.name}\n                    </a>\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>{person.mother ? <a className=\"has-text-danger\" href={`#/people/${person.mother.slug}`}>{person.motherName}</a> : person.motherName || '-'}</td>\n                  <td>{person.father ? <a href={`#/people/${person.father.slug}`}>{person.fatherName}</a> : person.fatherName || '-'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { PeopleTable } from '../components/Loader/PeopleTable';\n\nexport const PeoplePage = () => {\n  const { slug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable selectedSlug={slug} />\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NavBar } from './components/Loader/NavBar';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"people\">\n              <Route\n                path=\":slug\"\n                element={<PeoplePage />}\n              />\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n            </Route>\n\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}